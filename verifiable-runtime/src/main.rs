mod dvm;
use std::vec;

fn main() {
    //! Example program in DVM opcode!
    //! PUSH 0x00000056
    //! PUSH 0x00000077
    //! ADD
    //! PUSH 0x00000022
    //! MUL
    //! PUSH 0x00000002
    //! SWAP
    //! DIV
    //! PUSH 0x0000afde
    //! SUB
    //! RET
    let program = vec![
        0x05u8, 0x00, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0x00, 0x77, 0x01, 0x05, 0x00, 0x00, 0x00,
        0x22, 0x03, 0x05, 0x00, 0x00, 0x00, 0x02, 0x08, 0x04, 0x05, 0x00, 0x00, 0xaf, 0xde, 0x02,
        0x07,
    ];
    let mut my_dummy_vm = dvm::DVM::new();
    println!("Result: {}", my_dummy_vm.process(program));
}
